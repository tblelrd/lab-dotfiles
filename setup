#!/usr/bin/bash

set -u
NET_HOME="/cs/home/$USER"

LINES=$(tput lines)
BOTTOM_LINES=$((LINES/2))

function print_bottom () {
  local text=$@
  
  printf "\e7" # Save cursor location
  printf '\e[%s;%sr' "$((LINES-BOTTOM_LINES))" "$LINES" # New bottom scrollable region
  printf "\e[%s;1H" "$LINES"

  printf "\e[1;34m$text\n\e[0m"

  printf '\e[%s;%sr' "0" "$((LINES-BOTTOM_LINES))" # Old top scrollable region
  printf "\e8" # Restore cursor location
}

function update_script () {
  # Enter dotfiles directory
  print_bottom "Entering dotfiles directory"
  pushd "$NET_HOME/dotfiles"

  print_bottom "Fetching the remote"
  git fetch origin main

  local local_branch=$(git rev-parse main)
  local remote_branch=$(git rev-parse origin/main)

  if [[ $local_branch = $remote_branch ]]; then
    print_bottom "Up to date"
  else
    print_bottom "Updating, going to run other script"
    git pull origin main
    ./setup
    popd
    exit
 fi

 sleep 1
}

function init_script () {
  # Leave space for bottom lines
  for i in $(seq "$BOTTOM_LINES"); do
    printf "\n"
  done

  printf "\e7" # Save cursor location

  printf '\e[%s;%sr' "0" "$((LINES-BOTTOM_LINES))"

  printf "\e8" # Restore cursor location

  # Go back up the spaces made like 10 lines ago
  printf "\e[%sA" "$BOTTOM_LINES"
}

function deinit_script() {
  printf "\e7" # Save cursor location

  local i
  for i in $(seq "$BOTTOM_LINES"); do
    printf "\e[%s;1H" "$((LINES - i))"
    printf "\e[2K"
  done

  printf '\e[%s;%sr' "0" "$LINES"
  printf "\e8" # Restore cursor location
}

function download_dependencies () {
  print_bottom "Downloading Dependencies..."

  print_bottom "[DEP] Checking if starship exists."
  if ! command -v starship > /dev/null; then
    print_bottom "[DEP] Starship not installed, downloading.."
    curl -sSOJ https://starship.rs/install.sh 
    chmod +x ./install.sh
    ./install.sh -b "$NET_HOME/usr/bin" --yes
    rm ./install.sh
  else 
    print_bottom "[DEP] Starship Installed, skipping..."
  fi
}

function main () {
  trap deinit_script exit # Yeah
  trap deinit_script SIGINT # Yeah
  init_script

  update_script

  # Dependencies
  download_dependencies
}

main 
